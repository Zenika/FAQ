references:
  workspace_root: &workspace_root /home/circleci/my-workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

version: 2
jobs:
  build:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:9-browsers
    steps:
      - checkout

      - restore_cache:
          keys:
            - root-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - root-

      - run: npm install

      - run: npm run lint

      - save_cache:
          paths:
            - node_modules
          key: root-{{ checksum "package-lock.json" }}

      - restore_cache:
          keys:
            - server-{{ checksum "package-lock.json" }}
            - server-

      - run: cd server && npm install && npm run lint && cd ..

      - save_cache:
          paths:
            - server/node_modules
          key: server-{{ checksum "package-lock.json" }}

      - run: npm run build

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  prisma_deploy:
    environment:
      DEPLOY_DIR: ~/prisma_deploy
    working_directory: *workspace_root
    docker:
      - image: circleci/node:9-browsers
    steps:
      - *attach_workspace

      - run: |
          mkdir -p ${DEPLOY_DIR}
          cp server/prisma/Dockerfile.clever-cloud ${DEPLOY_DIR}/Dockerfile
          cd ${DEPLOY_DIR}
          git init
          git add .
          git commit -m "Deploy"
          git remote add clever $CLEVER_CLOUD_PRISMA_GIT_URL
          git push --force clever master

  deploy:
    environment:
      DEPLOY_DIR: ~/deploy
    working_directory: *workspace_root
    docker:
      - image: circleci/node:9-browsers
    steps:
      - *attach_workspace

      - run: |
          mkdir -p ${DEPLOY_DIR}
          cp -R server/ ${DEPLOY_DIR}
          cp -R build/ ${DEPLOY_DIR}/front_build
          cd ${DEPLOY_DIR}
          git init
          git add .
          git commit -m "Deploy"
          git remote add clever $CLEVER_CLOUD_BACKEND_GIT_URL
          git push --force clever master
          npm run deploy
          npm run algolia

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
#      - prisma_deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
