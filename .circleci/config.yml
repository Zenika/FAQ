references:
  workspace_root: &workspace_root
    /home/circleci/my-workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

version: 2
jobs:
  build:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:9-browsers
    steps:
      - checkout

      - restore_cache:
          keys:
          - root-{{ checksum "package-lock.json" }}
          # fallback to using the latest cache if no exact match is found
          - root-

      - run: npm install

      - run: npm run lint

      - save_cache:
          paths:
            - node_modules
          key: root-{{ checksum "package-lock.json" }}

      - restore_cache:
          keys:
          - server-{{ checksum "package-lock.json" }}
          - server-

      - run: cd server && npm install && cd ..

      - save_cache:
          paths:
            - server/node_modules
          key: server-{{ checksum "package-lock.json" }}

      - run: npm run build

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .

  deploy:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:9-browsers
    steps:
      - *attach_workspace

      - run: npm run deploy

  gcloud_prod:
    working_directory: *workspace_root
    docker:
      - image: google/cloud-sdk
    steps:
      - *attach_workspace

      # Authenticate GCloud
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud config set project $GCLOUD_APP_ID

      # Deploy
      - run: gcloud app deploy build/dispatch.yaml
      - run: gcloud app deploy build/ --quiet --version=prod

  gcloud_next:
    working_directory: *workspace_root
    docker:
      - image: google/cloud-sdk
    steps:
      - *attach_workspace

      # Authenticate GCloud
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud config set project $GCLOUD_APP_ID

      # Deploy
      - run: gcloud app deploy build/next.yaml --quiet --stop-previous-version

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - next
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - gcloud_prod:
          requires:
            - build
          filters:
            branches:
              only: master
      - gcloud_next:
          requires:
            - build
          filters:
            branches:
              only: next
